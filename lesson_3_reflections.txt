When would you want to use a remote repository rather than keeping all your 
work local?
  When you want to share your work, potentially work from another computer, 
  ensure changes are saved in another platform 

Why might you want to always pull changes manually rather than having Git 
automatically stay up-to-date with your remote repository?
	So you're pulling at the right times, similar to why you might want to 
	commit changes manually within a branch

Describe the differences between forks, clones, and branches. When would you 
use one instead of another?
	fork: clone on github
	clone: essentially copying the entirety of a file including its history
	branch: a diverted version/addition to a program that doesn't affect
	other versions.
	You fork a program to work on your own version without altering the 
	original but while still providing credit to the original. You clone
	in order to work on said program with your own programs on your computer
	and you use branches to maintain a working, presentable version of your 
	code while experimenting with changes

What is the benefit of having a copy of the last known state of the remote 
stored locally?
	In case you want to go back to that state to start again from there or if 
	you want to merge the previous state with a new one

How would you collaborate without using Git or GitHub? What would be easier, 
and what would be harder?
	possibly google docs. This would be easier in the sense that you could 
	see changes much more quickly but much harder as the changes would not be 
	nearly as well incorporated

When would you want to make changes in a separate branch rather than directly 
in master? What benefits does each approach have?
	You'd use a separate branch so you don't interfere with potential other 
	contributors and so that you won't (potentially) mess up the master. 
	It makes things a bit more complicated to merge back into the master but 
	ensures that conflicts are easily found 